<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>CMS eBook: Upload & Kelola Bab/Subbab dengan Konten</title>
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Quill CSS -->
  <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet" />
  <style>
    .ql-editor {
      min-height: 120px;
    }
  </style>
</head>
<body class="bg-gray-100 min-h-screen font-sans">

<header class="bg-indigo-700 text-white p-4 shadow-md">
  <h1 class="text-xl font-bold">CMS eBook - Upload & Kelola Bab/Subbab</h1>
</header>

<main class="container mx-auto p-6 max-w-5xl">

  <!-- Form Upload eBook -->
  <section class="bg-white p-6 rounded shadow mb-8">
    <h2 class="text-2xl font-semibold mb-6">Upload eBook</h2>
    <form id="ebookForm" class="space-y-4">
      <div class="grid grid-cols-2 gap-6">
        <div>
          <label class="block font-medium mb-1" for="cover">Cover eBook</label>
          <input type="file" id="cover" name="cover" accept="image/*" class="w-full border rounded p-2" required />
        </div>
        <div>
          <label class="block font-medium mb-1" for="title">Judul eBook</label>
          <input type="text" id="title" name="title" placeholder="Judul eBook" class="w-full border rounded p-2" required />
        </div>
      </div>

      <div>
        <label class="block font-medium mb-1" for="descriptionEditor">Deskripsi (Gambaran Besar eBook)</label>
        <div id="descriptionEditor" class="bg-white border rounded p-2"></div>
        <textarea id="description" name="description" hidden></textarea>
      </div>

      <div class="grid grid-cols-3 gap-6">
        <div>
          <label class="block font-medium mb-1" for="author">Penulis</label>
          <input type="text" id="author" name="author" placeholder="Nama Penulis" class="w-full border rounded p-2" required />
        </div>
        <div>
          <label class="block font-medium mb-1" for="release_date">Tanggal Rilis</label>
          <input type="date" id="release_date" name="release_date" class="w-full border rounded p-2" required />
        </div>
        <div>
          <label class="block font-medium mb-1" for="pdf">File PDF eBook</label>
          <input type="file" id="pdf" name="pdf" accept="application/pdf" class="w-full border rounded p-2" required />
        </div>
      </div>
    </form>
  </section>

  <!-- Kelola Bab & Subbab -->
  <section class="bg-white p-6 rounded shadow mb-8">
    <h2 class="text-2xl font-semibold mb-4">Kelola Bab & Subbab</h2>

    <div id="chaptersContainer" class="space-y-6"></div>

    <button id="addChapterBtn" class="mt-4 bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">
      + Tambah Bab Baru
    </button>
  </section>

  <!-- Tombol Simpan -->
  <section class="text-center">
    <button id="saveBtn" class="bg-green-600 text-white px-6 py-3 rounded text-lg font-semibold hover:bg-green-700">
      Simpan eBook & Struktur Bab
    </button>
  </section>
</main>

<!-- Quill JS -->
<script src="https://cdn.quilljs.com/1.3.7/quill.js"></script>

<script>
  // Inisialisasi Quill deskripsi utama
  const quillDescription = new Quill('#descriptionEditor', {
    theme: 'snow',
    placeholder: 'Tulis gambaran besar/deskripsi eBook di sini...',
    modules: {
      toolbar: [
        [{ header: [1, 2, false] }],
        ['bold', 'italic', 'underline'],
        ['link', 'blockquote', 'code-block'],
        [{ list: 'ordered' }, { list: 'bullet' }]
      ]
    }
  });

  // Menyimpan semua editor Quill subbab
  const quillSubchapterEditors = new Map();

  // Fungsi buat editor Quill untuk subbab konten, dengan id unik
  function createQuillEditor(container, id) {
    const editorDiv = document.createElement('div');
    editorDiv.classList.add('bg-white', 'border', 'rounded', 'p-2');
    editorDiv.style.minHeight = '120px';
    container.appendChild(editorDiv);

    const quill = new Quill(editorDiv, {
      theme: 'snow',
      placeholder: 'Tulis konten subbab di sini...',
      modules: {
        toolbar: [
          [{ header: [1, 2, false] }],
          ['bold', 'italic', 'underline'],
          ['link', 'blockquote', 'code-block'],
          [{ list: 'ordered' }, { list: 'bullet' }]
        ]
      }
    });
    quillSubchapterEditors.set(id, quill);
  }

  // Fungsi buat elemen subbab (judul + quill konten + tombol hapus)
  function createSubchapterElement(chapterIndex, subchapterIndex) {
    const subchapterDiv = document.createElement('div');
    subchapterDiv.classList.add('border', 'border-gray-300', 'rounded', 'p-3', 'mb-4', 'bg-gray-50', 'relative');

    subchapterDiv.innerHTML = `
      <label class="block font-medium mb-1">Judul Subbab</label>
      <input type="text" name="chapters[${chapterIndex}][subchapters][${subchapterIndex}][title]"
        placeholder="Judul Subbab" required
        class="w-full border rounded p-2 mb-2" />
    `;

    // Container untuk editor konten
    const editorContainer = document.createElement('div');
    subchapterDiv.appendChild(editorContainer);

    // Tombol hapus subbab
    const deleteBtn = document.createElement('button');
    deleteBtn.type = 'button';
    deleteBtn.className = 'absolute top-2 right-2 text-red-600 font-bold text-lg';
    deleteBtn.title = 'Hapus Subbab';
    deleteBtn.innerHTML = '&times;';
    deleteBtn.addEventListener('click', () => {
      // Hapus quill editor dari map
      quillSubchapterEditors.delete(getSubchapterId(chapterIndex, subchapterIndex));
      subchapterDiv.remove();
    });
    subchapterDiv.appendChild(deleteBtn);

    // Buat editor Quill konten subbab
    createQuillEditor(editorContainer, getSubchapterId(chapterIndex, subchapterIndex));

    return subchapterDiv;
  }

  // Fungsi buat elemen bab (judul + daftar subbab + tombol tambah subbab + tombol hapus bab)
  function createChapterElement(chapterIndex) {
    const chapterDiv = document.createElement('div');
    chapterDiv.classList.add('border', 'border-gray-400', 'rounded', 'p-5', 'bg-white', 'relative');

    chapterDiv.innerHTML = `
      <label class="block font-bold mb-3 text-lg">Judul Bab</label>
      <input type="text" name="chapters[${chapterIndex}][title]" placeholder="Judul Bab" required
        class="w-full border rounded p-3 mb-4" />
      <div class="subchaptersContainer space-y-4 mb-4"></div>
      <button type="button" class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 mb-2">
        + Tambah Subbab
      </button>
    `;

    // Tombol hapus bab
    const deleteChapterBtn = document.createElement('button');
    deleteChapterBtn.type = 'button';
    deleteChapterBtn.className = 'absolute top-2 right-2 text-red-600 font-bold text-xl';
    deleteChapterBtn.title = 'Hapus Bab';
    deleteChapterBtn.innerHTML = '&times;';
    deleteChapterBtn.addEventListener('click', () => {
      // Hapus semua quill subbab yang ada dalam bab ini
      const subs = chapterDiv.querySelectorAll('.subchaptersContainer > div');
      subs.forEach((subDiv, idx) => {
        quillSubchapterEditors.delete(getSubchapterId(chapterIndex, idx));
      });
      chapterDiv.remove();
    });
    chapterDiv.appendChild(deleteChapterBtn);

    const addSubchapterBtn = chapterDiv.querySelector('button.bg-blue-600');
    const subchaptersContainer = chapterDiv.querySelector('.subchaptersContainer');

    let subchapterCount = 0;

    addSubchapterBtn.addEventListener('click', () => {
      const newSubchapter = createSubchapterElement(chapterIndex, subchapterCount++);
      subchaptersContainer.appendChild(newSubchapter);
    });

    return chapterDiv;
  }

  // Helper buat id unik tiap subbab (gabungan chapterIndex-subchapterIndex)
  function getSubchapterId(chapterIndex, subchapterIndex) {
    return `chapter${chapterIndex}_subchapter${subchapterIndex}`;
  }

  // Main: container bab dan tombol tambah bab
  const chaptersContainer = document.getElementById('chaptersContainer');
  const addChapterBtn = document.getElementById('addChapterBtn');
  let chapterCount = 0;

  addChapterBtn.addEventListener('click', () => {
    const newChapter = createChapterElement(chapterCount++);
    chaptersContainer.appendChild(newChapter);
  });

  // Tombol simpan utama
  const saveBtn = document.getElementById('saveBtn');
  const ebookForm = document.getElementById('ebookForm');

  saveBtn.addEventListener('click', () => {
    // Validasi form utama
    if (!ebookForm.reportValidity()) {
      alert('Mohon isi data eBook dengan lengkap terlebih dahulu.');
      return;
    }

    // Minimal ada 1 bab
    const chapterInputs = chaptersContainer.querySelectorAll('input[name$="[title]"]');
    if (chapterInputs.length === 0) {
      alert('Mohon tambahkan minimal satu Bab.');
      return;
    }

    // Validasi setiap bab dan subbab
    let valid = true;
    chapterInputs.forEach(input => {
      if (!input.value.trim()) valid = false;
    });
    if (!valid) {
      alert('Judul Bab tidak boleh kosong.');
      return;
    }

    // Validasi subbab judul
    const allSubchapterTitles = chaptersContainer.querySelectorAll('input[name*="[subchapters]"][name$="[title]"]');
    allSubchapterTitles.forEach(input => {
      if (!input.value.trim()) valid = false;
    });
    if (!valid) {
      alert('Judul Subbab tidak boleh kosong.');
      return;
    }

    // Simpan isi Quill deskripsi utama ke textarea
    document.getElementById('description').value = quillDescription.root.innerHTML;

    // Untuk setiap subbab, simpan konten quill ke textarea hidden
    // Kita buat textarea untuk setiap subbab dengan name yg sesuai agar backend bisa baca
    // Hapus textarea lama dulu
    document.querySelectorAll('.hiddenSubchapterContent').forEach(t => t.remove());

    quillSubchapterEditors.forEach((quill, id) => {
      // id format: chapterX_subchapterY
      const [chapterPart, subchapterPart] = id.split('_');
      const chapterIdx = chapterPart.replace('chapter', '');
      const subchapterIdx = subchapterPart.replace('subchapter', '');

      // Buat textarea tersembunyi
      const ta = document.createElement('textarea');
      ta.name = `chapters[${chapterIdx}][subchapters][${subchapterIdx}][content]`;
      ta.hidden = true;
      ta.classList.add('hiddenSubchapterContent');
      ta.value = quill.root.innerHTML;

      ebookForm.appendChild(ta);
    });

    // Simulasi submit
    alert('Data sudah siap disimpan! (ini simulasi)');
    // ebookForm.submit(); // aktifkan jika mau submit form biasa
  });
</script>

</body>
</html>
